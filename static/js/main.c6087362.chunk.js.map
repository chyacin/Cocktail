{"version":3,"sources":["component/Footer/Footer.jsx","component/CocktailList/Modal.jsx","component/CocktailList/IngredientList.jsx","component/Header/FavoriteButton.jsx","component/CocktailList/Cocktail.jsx","component/CocktailList/CocktailList.jsx","component/SearchBar/SearchBar.jsx","component/Home.jsx","component/Header/headerLogo.png","component/Header/Header.jsx","component/Header/IngredientsFilter.jsx","component/Header/CreateCocktail.jsx","component/Header/CocktailOfTheDay.jsx","component/Header/Favorites.jsx","component/Header/useLocalStorage.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Footer","className","href","Modal","children","useState","isOpen","setIsOpen","type","onClick","id","IngredientList","ingredient1","ingredient2","ingredient3","ingredient4","ingredient5","ingredient6","instructions","defaultProps","FavoriteButton","cocktail","favorites","setFavorites","findIndex","onlyFavs","idDrink","size","newFavoriteList","addFavoriteCocktail","filter","favorite","removeFavoriteCocktail","Cocktail","data","src","strDrinkThumb","alt","strDrink","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strInstructions","CocktailList","cocktails","page","setPage","useEffect","slice","map","length","SearchBar","getQuery","text","setText","placeholder","results","value","onChange","e","q","target","Home","query","setQuery","toLowerCase","includes","Header","headerLogo","activeClassName","exact","to","IngredientsFilter","ingredients","selectedIngredient","setSelectedIngredient","ingredient","generateIngredientList","reduce","updatedIngredientList","mergedArray","strIngredients","setWithoutDuplicates","Set","sort","CreateCocktail","setIngredients","refinedIngredients","setRefinedIngredients","firstSelectedIngredient","setFirstSelectedIngredient","secondSelectedIngredient","setSecondSelectedIngredient","allIngredients","CocktailOfTheDay","randomCocktail","setRandomCocktail","generateRandomCocktail","cocktailIndex","Math","floor","random","p","Favorites","drink","useLocalStorage","itemName","initialValue","stored","localStorage","getItem","initial","JSON","parse","setValue","newValue","setItem","stringify","App","cocktailList","setCocktailList","Promise","all","split","letter","axios","get","then","responses","acc","response","drinks","mappedCocktails","i","push","a","b","localeCompare","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6087362.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"row\">\r\n      <div className=\"column\">\r\n        <h1>About Us</h1>\r\n        <div className=\"icons\">\r\n          <a className=\"icon\" href=\"https://www.linkedin.com/in/allan-caplain-79019a159/\">\r\n            <p className=\"fa-fa-linkedin\">\r\n              Allan Caplain\r\n            </p>\r\n          </a>\r\n          <a className=\"icon\" href=\"https://www.linkedin.com/in/bastien-le-brun-3417b4137/\">\r\n            <p className=\"fa-fa-linkedin\">\r\n              Bastien Le Brun\r\n            </p>\r\n          </a>\r\n          <a className=\"icon\" href=\"https://www.linkedin.com/in/calvinhyacinthmsc/\">\r\n            <p className=\"fa-fa-linkedin\">\r\n              Calvin Hyacinth\r\n            </p>\r\n          </a>\r\n          <a className=\"icon\" href=\"https://www.linkedin.com/in/c%C3%A9dric-guyot-17231b209/\">\r\n            <p className=\"fa-fa-linkedin\">\r\n              Cédric Guyot\r\n            </p>\r\n          </a>\r\n          <a className=\"icon\" href=\"https://www.linkedin.com/in/cyril-david-928403176/\">\r\n            <p className=\"fa-fa-linkedin\">\r\n              Cyril David\r\n            </p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import './CocktailList.css';\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Modal({ children }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  if (isOpen === false) {\r\n    return <button className=\"modalButton\" type=\"button\" onClick={() => { setIsOpen(true); }}>Details</button>;\r\n  }\r\n  return (\r\n    <div id=\"myModal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        {children}\r\n        <button className=\"card-button\" type=\"button\" onClick={() => { setIsOpen(false); }}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction IngredientList({\r\n\r\n  ingredient1, ingredient2, ingredient3, ingredient4, ingredient5, ingredient6, instructions,\r\n}) {\r\n  return (\r\n    <div className=\"ingredient\">\r\n      <p>{ingredient1}</p>\r\n      <p>{ingredient2}</p>\r\n      <p>{ingredient3}</p>\r\n      <p>{ingredient4}</p>\r\n      <p>{ingredient5}</p>\r\n      <p>{ingredient6}</p>\r\n      <div className=\"instructions\">{instructions}</div>\r\n    </div>\r\n  );\r\n}\r\nIngredientList.propTypes = {\r\n  ingredient1: PropTypes.string,\r\n  ingredient2: PropTypes.string,\r\n  ingredient3: PropTypes.string,\r\n  ingredient4: PropTypes.string,\r\n  ingredient5: PropTypes.string,\r\n  ingredient6: PropTypes.string,\r\n  instructions: PropTypes.string,\r\n};\r\nIngredientList.defaultProps = {\r\n  ingredient1: null,\r\n  ingredient2: null,\r\n  ingredient3: null,\r\n  ingredient4: null,\r\n  ingredient5: null,\r\n  ingredient6: null,\r\n  instructions: null,\r\n};\r\n\r\nexport default IngredientList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IoIosHeart, IoIosHeartEmpty } from 'react-icons/io';\r\n\r\nfunction FavoriteButton({ cocktail, favorites, setFavorites }) {\r\n  const addFavoriteCocktail = () => {\r\n    const newFavoriteList = [...favorites, cocktail];\r\n    setFavorites(newFavoriteList);\r\n  };\r\n\r\n  const removeFavoriteCocktail = () => {\r\n    const newFavoriteList = favorites.filter(\r\n      (favorite) => favorite.idDrink !== cocktail.idDrink,\r\n    );\r\n    setFavorites(newFavoriteList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {favorites.findIndex((onlyFavs) => (onlyFavs.idDrink === cocktail.idDrink)) === -1 ? (\r\n        <IoIosHeartEmpty\r\n          size={15}\r\n          onClick={() => addFavoriteCocktail()}\r\n        />\r\n      ) : (\r\n        <IoIosHeart\r\n          size={15}\r\n          onClick={() => removeFavoriteCocktail()}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nFavoriteButton.propTypes = {\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n  cocktail: PropTypes.shape({\r\n    idDrink: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default FavoriteButton;\r\n","import './CocktailList.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from './Modal';\r\nimport IngredientList from './IngredientList';\r\nimport FavoriteButton from '../Header/FavoriteButton';\r\n\r\nfunction Cocktail({ data, favorites, setFavorites }) {\r\n  return (\r\n    <div className=\"cards\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <FavoriteButton\r\n            cocktail={data}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n          <img className=\"card-img\" src={data.strDrinkThumb} alt=\"illustration\" />\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-title\">{data.strDrink}</h2>\r\n            <Modal>\r\n              <>\r\n                <h2 className=\"card-title\">{data.strDrink}</h2>\r\n                <img className=\"modal-img\" src={data.strDrinkThumb} alt=\"illustration\" />\r\n                <IngredientList\r\n                  ingredient1={data.strIngredient1}\r\n                  ingredient2={data.strIngredient2}\r\n                  ingredient3={data.strIngredient3}\r\n                  ingredient4={data.strIngredient4}\r\n                  ingredient5={data.strIngredient5}\r\n                  ingredient6={data.strIngredient6}\r\n                  instructions={data.strInstructions}\r\n                />\r\n              </>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nCocktail.propTypes = {\r\n  data: PropTypes.shape({\r\n    strDrink: PropTypes.string.isRequired,\r\n    strDrinkThumb: PropTypes.string.isRequired,\r\n    strIngredient1: PropTypes.string,\r\n    strIngredient2: PropTypes.string,\r\n    strIngredient3: PropTypes.string,\r\n    strIngredient4: PropTypes.string,\r\n    strIngredient5: PropTypes.string,\r\n    strIngredient6: PropTypes.string,\r\n    strInstructions: PropTypes.string,\r\n  }).isRequired,\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Cocktail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Cocktail from './Cocktail';\r\n\r\nconst CocktailList = ({ cocktails, favorites, setFavorites }) => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [cocktails]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"contenu\">\r\n        { cocktails.slice(\r\n          (page - 1) * 14, page * 14,\r\n        ).map((cocktail) => (\r\n          <Cocktail\r\n            data={cocktail}\r\n            key={cocktail.idDrink}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        {\r\n          (page > 1) && (\r\n            <button\r\n              className=\"pagebutton\"\r\n              type=\"button\"\r\n              onClick={() => setPage(page - 1)}\r\n            >\r\n              Previous page\r\n            </button>\r\n          )\r\n        }\r\n        {\r\n          (page * 14 < cocktails.length) && (\r\n            <button\r\n              className=\"pagebutton\"\r\n              type=\"button\"\r\n              onClick={() => setPage(page + 1)}\r\n            >\r\n              Next page\r\n            </button>\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nCocktailList.propTypes = {\r\n  cocktails: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\nexport default CocktailList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar({ getQuery }) {\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = (q) => {\r\n    setText(q);\r\n    getQuery(q);\r\n  };\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search Cocktails\"\r\n        results=\"0\"\r\n        value={text}\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  getQuery: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CocktailList from './CocktailList/CocktailList';\r\nimport SearchBar from './SearchBar/SearchBar';\r\n\r\nconst Home = ({ cocktails, favorites, setFavorites }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <SearchBar getQuery={(q) => setQuery(q)} />\r\n      <CocktailList\r\n        cocktails={cocktails.filter(\r\n          (cocktail) => (\r\n            cocktail.strDrink.toLowerCase().includes(query.toLowerCase())\r\n          ),\r\n        )}\r\n        favorites={favorites}\r\n        setFavorites={setFavorites}\r\n      />\r\n    </>\r\n  );\r\n};\r\nHome.propTypes = {\r\n  cocktails: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/headerLogo.e79643a7.png\";","import './Header.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport headerLogo from './headerLogo.png';\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"gridstyle\">\r\n      <img className=\"codeTailsImg\" src={headerLogo} alt=\"logo\" />\r\n      <h1>WELCOME TO WILD CODE&apos;TAILS</h1>\r\n    </div>\r\n    <div className=\"thefourth\">\r\n      <nav className=\"navlist\">\r\n\r\n        <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/\">\r\n          Search\r\n        </NavLink>\r\n\r\n        <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/create\">\r\n          Create\r\n        </NavLink>\r\n\r\n        <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/cocktail-of-the-day\">\r\n          Try me !\r\n        </NavLink>\r\n\r\n        <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/favorites\">\r\n          Favorites\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction IngredientsFilter({\r\n  ingredients,\r\n  selectedIngredient,\r\n  setSelectedIngredient,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <select\r\n          className=\"select\"\r\n          onChange={(e) => {\r\n            setSelectedIngredient(e.target.value);\r\n          }}\r\n          value={selectedIngredient}\r\n        >\r\n          <option value=\"\">Select Ingredient</option>\r\n          { ingredients.map((ingredient) => (\r\n            <option key={ingredient} value={ingredient}>{ingredient}</option>))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nIngredientsFilter.propTypes = {\r\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedIngredient: PropTypes.string.isRequired,\r\n  setSelectedIngredient: PropTypes.func.isRequired,\r\n};\r\nexport default IngredientsFilter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IngredientsFilter from './IngredientsFilter';\r\nimport CocktailList from '../CocktailList/CocktailList';\r\n\r\nconst generateIngredientList = (cocktails) => {\r\n  const ingredientList = cocktails.reduce((updatedIngredientList, cocktail) => {\r\n    const mergedArray = [...updatedIngredientList, ...cocktail.strIngredients];\r\n    const setWithoutDuplicates = new Set(mergedArray);\r\n    const setAsArray = [...setWithoutDuplicates];\r\n    return setAsArray;\r\n  }, []);\r\n  return ingredientList.sort();\r\n};\r\n\r\nfunction CreateCocktail({ cocktails, favorites, setFavorites }) {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [refinedIngredients, setRefinedIngredients] = useState([]);\r\n  const [firstSelectedIngredient, setFirstSelectedIngredient] = useState('');\r\n  const [secondSelectedIngredient, setSecondSelectedIngredient] = useState('');\r\n\r\n  useEffect(() => {\r\n    const allIngredients = generateIngredientList(cocktails);\r\n    setIngredients(allIngredients);\r\n    setRefinedIngredients(allIngredients);\r\n    setFirstSelectedIngredient('');\r\n    setSecondSelectedIngredient('');\r\n  }, [cocktails]);\r\n  useEffect(() => {\r\n    const allIngredients = generateIngredientList(\r\n      cocktails.filter((cocktail) => (\r\n        firstSelectedIngredient === ''\r\n        || cocktail.strIngredients.includes(firstSelectedIngredient)\r\n      )),\r\n    );\r\n    setRefinedIngredients(\r\n      allIngredients.filter((ingredient) => ingredient !== firstSelectedIngredient),\r\n    );\r\n    setSecondSelectedIngredient('');\r\n  }, [firstSelectedIngredient]);\r\n  return (\r\n    <div className=\"strIngredient\">\r\n      {firstSelectedIngredient}\r\n      {secondSelectedIngredient}\r\n      <IngredientsFilter\r\n        ingredients={ingredients}\r\n        selectedIngredient={firstSelectedIngredient}\r\n        setSelectedIngredient={setFirstSelectedIngredient}\r\n      />\r\n      <IngredientsFilter\r\n        ingredients={refinedIngredients}\r\n        selectedIngredient={secondSelectedIngredient}\r\n        setSelectedIngredient={setSecondSelectedIngredient}\r\n      />\r\n      <CocktailList\r\n        cocktails={cocktails.filter((cocktail) => (\r\n          (\r\n            firstSelectedIngredient === ''\r\n            || cocktail.strIngredients.includes(firstSelectedIngredient)\r\n          )\r\n          && (\r\n            secondSelectedIngredient === ''\r\n            || cocktail.strIngredients.includes(secondSelectedIngredient)\r\n          )\r\n        ))}\r\n        favorites={favorites}\r\n        setFavorites={setFavorites}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nCreateCocktail.propTypes = {\r\n  cocktails: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\nexport default CreateCocktail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BiDrink } from 'react-icons/bi';\r\nimport Cocktail from '../CocktailList/Cocktail';\r\nimport './CocktailOfTheDay.css';\r\n\r\nfunction CocktailOfTheDay({ cocktails, favorites, setFavorites }) {\r\n  const [randomCocktail, setRandomCocktail] = useState();\r\n\r\n  const generateRandomCocktail = () => {\r\n    const cocktailIndex = Math.floor(Math.random() * cocktails.length);\r\n    setRandomCocktail(cocktails[cocktailIndex]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (randomCocktail == null && cocktails.length >= 1) {\r\n      generateRandomCocktail();\r\n    }\r\n  }, [cocktails]);\r\n  return (\r\n    <div className=\"dayscocktail\">\r\n      { randomCocktail && (\r\n        <div className=\"drinking\">\r\n          <Cocktail\r\n            data={randomCocktail}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n          <div className=\"drink\">\r\n            <BiDrink size={70} className=\"button\" p onClick={() => generateRandomCocktail()} type=\"button\" />\r\n            <div className=\"text\">\r\n              <text>\r\n                <p>CHANGE</p>\r\n              </text>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nCocktailOfTheDay.propTypes = {\r\n  cocktails: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\nexport default CocktailOfTheDay;\r\n","import React from 'react';\r\nimport './Favorites.css';\r\nimport PropTypes from 'prop-types';\r\nimport Cocktail from '../CocktailList/Cocktail';\r\n\r\nfunction Favorites({ favorites, setFavorites }) {\r\n  return (\r\n    <div className=\"myFavorites\">\r\n      <div className=\"favoriteCocktail\">\r\n        {favorites.map((drink) => (\r\n          <Cocktail\r\n            data={drink}\r\n            key={drink.idDrink}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nFavorites.propTypes = {\r\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\nexport default Favorites;\r\n","import { useState } from 'react';\r\n\r\nconst useLocalStorage = (itemName, initialValue) => {\r\n  const stored = localStorage.getItem(itemName);\r\n  const initial = stored ? JSON.parse(stored) : initialValue;\r\n  const [value, setValue] = useState(initial);\r\n  return [value, (newValue) => {\r\n    localStorage.setItem(itemName, JSON.stringify(newValue));\r\n    setValue(newValue);\r\n  }];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Footer from './component/Footer/Footer';\r\nimport Home from './component/Home';\r\nimport Header from './component/Header/Header';\r\nimport CreateCocktail from './component/Header/CreateCocktail';\r\nimport CocktailOfTheDay from './component/Header/CocktailOfTheDay';\r\nimport Favorites from './component/Header/Favorites';\r\nimport useLocalStorage from './component/Header/useLocalStorage';\r\n\r\nfunction App() {\r\n  const [cocktailList, setCocktailList] = useState([]);\r\n  const [favorites, setFavorites] = useLocalStorage('favorite-cocktails', []);\r\n\r\n  useEffect(() => {\r\n    Promise.all(\r\n      'abcdefghijklmnopqrstuvwxyz0123456789'.split('').map((letter) => (\r\n        axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${letter}`)\r\n      )),\r\n    ).then((responses) => {\r\n      setCocktailList(\r\n        responses.reduce((acc, response) => {\r\n          if (response.data.drinks == null) {\r\n            return acc;\r\n          }\r\n          const mappedCocktails = response.data.drinks.map((cocktail) => {\r\n            const ingredients = [];\r\n\r\n            for (let i = 1; i <= 15; i += 1) {\r\n              const ingredient = cocktail[`strIngredient${i}`];\r\n              if (ingredient != null && ingredient !== '') {\r\n                ingredients.push(ingredient.toLowerCase());\r\n              }\r\n            }\r\n\r\n            return { ...cocktail, strIngredients: ingredients };\r\n          });\r\n          return [\r\n            ...acc,\r\n            ...mappedCocktails.sort((a, b) => a.strDrink.localeCompare(b.strDrink)),\r\n          ];\r\n        }, []),\r\n      );\r\n    });\r\n  }, []);\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <main>\r\n        <Route path=\"/\" exact>\r\n          <Home\r\n            cocktails={cocktailList}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreateCocktail\r\n            cocktails={cocktailList}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n        </Route>\r\n        <Route path=\"/cocktail-of-the-day\" exact>\r\n          <CocktailOfTheDay\r\n            cocktails={cocktailList}\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n        </Route>\r\n        <Route path=\"/favorites\" exact>\r\n          <Favorites\r\n            favorites={favorites}\r\n            setFavorites={setFavorites}\r\n          />\r\n        </Route>\r\n      </main>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}